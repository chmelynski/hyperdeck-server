<html>
<head>
<title>grid</title>
<style>
canvas:focus { outline : none }
</style>
</head>
<body>

<!--
<script src='js/lib/jquery-1.10.2.min.js'></script>
<script src='js/lib/handsontable.rulejs.js'></script>
<script src='js/lib/dat.gui.min.js'></script>
<script src="js/lib/jszip.js"></script> --> <!-- older version, still supports sync -->
<!-- <script src="js/lib/jszip.min.js"></script> --> <!-- version 3.0, mandates async -->

<!--
<button onclick='Download()'>Download</button>
<button onclick='Upload()'>Upload</button>
-->

<script>Hyperdeck = {};</script>
<script src='js/widgets/box.js'></script>
<script src='js/widgets/grid.js'></script>

<span id="debug"></span>
<div style="position:absolute ; top:2em ; left:2em">
<canvas width="1200" height="500" tabIndex="0" style="border:0px solid gray"></canvas>
</div>

<script>

function Upload() {
	
	var fileChooser = document.createElement('input');
	fileChooser.type = 'file';
	
	fileChooser.onchange = function() {
		var fileReader = new FileReader();
		fileReader.onload = function(event) {
			var text = event.target.result;
			data = JSON.parse(text);
			// do something
		};
		fileReader.readAsText(fileChooser.files[0]);
	};
	
	fileChooser.click();
}
function Download() {
	
	var blob = new Blob([JSON.stringify(data)],{type:'text/json'});
	var fileReader = new FileReader();
	
	fileReader.onload = function(event) {
		var a = document.createElement('a');
		a.href = event.target.result;
		a.download = 'filename';
		document.body.appendChild(a);
		a.click();
		document.body.removeChild(a);
	};
	
	fileReader.readAsDataURL(blob);
}

var dataComponent = {
	headers:["A","B","C","D"],
	data:[
		{A:1,B:2,C:3,D:4},
		{A:5,B:6,C:7,D:8},
		{A:9,B:10,C:11,D:12}
	]
};

var ctx = document.getElementsByTagName('canvas')[0].getContext('2d');
var grid = new Hyperdeck.Grid(ctx, dataComponent);

// some things call grid.section.draw(), so this clears the canvas and loops that back to grid.draw()
grid.section = {
	draw : function() { grid.ctx.clearRect(0, 0, grid.ctx.canvas.width, grid.ctx.canvas.height); grid.draw(); }
};

grid.ctx.canvas.onmousemove = function(e) { grid.onmousemove(e); };
grid.ctx.canvas.onmousedown = function(e) { grid.clearSelection(); };

grid.ctx.canvas.parentElement.appendChild(grid.input);

grid.draw();

</script>
</body>
</html>

