
{% extends "griddl/workbook-base.htm" %}

{% block style %}
#cells { position:absolute; top:3em; left:2em; width:50%; height:90%; overflow:auto; }
/* probably should put codemirror and handsontable css here, since those are tied to e.g. the widths of #cells */
{% endblock %}

{% block menuitems %}
	<button onclick="Griddl.NewText();">NewText</button>
	<button onclick="Griddl.NewGrid();">NewGrid</button>
	<button onclick="Griddl.NewMatrix();">NewMatrix</button>
	<button onclick="Griddl.NewTable();">NewTable</button>
	<button onclick="Griddl.NewTree();">NewTree</button>
	<button onclick="Griddl.NewHtml();">NewHtml</button>
	<button onclick="Griddl.NewCss();">NewCss</button>
	<button onclick="Griddl.NewJs();">NewJs</button>
	<button onclick="Griddl.NewJson();">NewJson</button>
	<button onclick="Griddl.NewDatgui();">NewDatgui</button>
	<button onclick="Griddl.NewImage();">NewImage</button>
	
	<button onclick="Griddl.NewBinary();">NewBinary</button>
	<button onclick="Griddl.ReorderComponents();">Reorder</button>
{% endblock %}

{% block html %}
	<script type="text/javascript" src="/static/griddl/js/griddl.js"></script>
	<script type="text/javascript" src="/static/griddl/js/charts.js"></script>
	<script type="text/javascript" src="/static/griddl/js/fonts.js"></script>
	<script type="text/javascript" src="/static/griddl/js/lib/typeset.js"></script>
	<script type="text/javascript" src="/static/griddl/js/lib/dat.gui.min.js"></script>
	<script type="text/javascript" src="/static/griddl/js/lib/babylon.math.js"></script>
	<script type="text/javascript" src="/static/griddl/js/griddl.graphics.js"></script>
	<script type="text/javascript" src="/static/griddl/js/graphviz.js"></script>
	
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
	
	/* http://docs.mathjax.org/en/latest/options/hub.html */
	
	tex2jax: {
		inlineMath: [["$","$"],["\\(","\\)"]]
	} ,
	
	//jax : [ 'input/TeX' , 'output/HTML-CSS' ] ,
	jax : [ 'input/TeX' , 'output/SVG' ] ,
	//jax : [ 'input/TeX' , 'output/NativeMML' ] ,
	
	messageStyle : 'none' ,
	
	/* Normally MathJax will typeset the mathematics on the page as soon as the page is loaded. If you want to delay that process, in which case you will need to call MathJax.Hub.Typeset() yourself by hand, set this value to true. */
	skipStartupTypeset : true ,
	
	/* This is a list of DOM element ID’s that are the ones to process for mathematics when any of the Hub typesetting calls (Typeset(), Process(), Update(), etc.) are called with no element specified, and during MathJax’s initial typesetting run when it starts up. This lets you restrict the processing to particular containers rather than scanning the entire document for mathematics. If none are supplied, the complete document is processed. */
	elements : [] ,
	
	/* These control whether to attach the MathJax contextual menu to the expressions typeset by MathJax. Since the code for handling MathPlayer in Internet Explorer is somewhat delicate, it is controlled separately via showMathMenuMSIE, but the latter is now deprecated in favor of the MathJax contextual menu settings for MathPlayer (see below).

	If showMathMenu is true, then right-clicking (on Windows or Linux) or control-clicking (on Mac OS X) will produce a MathJax menu that allows you to get the source of the mathematics in various formats, change the size of the mathematics relative to the surrounding text, get information about MathJax, and configure other MathJax settings.

	Set this to false to disable the menu. When true, the MathMenu configuration block determines the operation of the menu. See the MathMenu options for more details.

	These values used to be listed in the separate output jax, but have been moved to this more central location since they are shared by all output jax. MathJax will still honor their values from their original positions, if they are set there. */
	showMathMenu : true ,
	showMathMenuMSIE : true
});
</script>
	<!--
	<script type="text/javascript" src="/static/griddl/js/layout.js"></script>
	<script type="text/javascript" src="/static/griddl/js/ocr.js"></script>
	<script type="text/x-mathjax-config" src="/static/griddl/js/mathjax-config.js"></script>
	-->
	<script type="text/javascript" src="/static/griddl/MathJax/MathJax.js?config=TeX-AMS-MML_SVG"></script>
	<script type="text/javascript" src="/static/griddl/js/griddl.math.js"></script>
	
	<div id="cells"></div>
{% endblock %}

